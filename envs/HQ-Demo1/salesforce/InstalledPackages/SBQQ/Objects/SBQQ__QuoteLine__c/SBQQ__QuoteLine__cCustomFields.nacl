type salesforce.SBQQ__QuoteLine__c {
  salesforce.MasterDetail SBQQ__Quote__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Quote__c"
    label = "Quote"
    _required = false
    writeRequiresMasterRead = false
    reparentableMasterDetail = false
    referenceTo = [
      salesforce.SBQQ__Quote__c,
    ]
    inlineHelpText = "Quote to which this line item belongs."
    createable = true
    updateable = false
    relationshipOrder = 0
    relationshipName = "LineItems"
    queryable = true
    description = "Quote to which this line item belongs."
  }
  salesforce.Currency SBQQ__AdditionalDiscountAmount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__AdditionalDiscountAmount__c"
    label = "Additional Disc. (Amt)"
    _required = false
    inlineHelpText = "Additional customer discount extended on this line item in the form of an absolute amount."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Additional customer discount extended on this line item in terms of absolute amount."
  }
  salesforce.FormulaCurrency SBQQ__AdditionalDiscount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__AdditionalDiscount__c"
    label = "Additional Disc."
    _required = false
    formula = "(SBQQ__RegularPrice__c - SBQQ__CustomerPrice__c) *  SBQQ__EffectiveQuantity__c"
    inlineHelpText = "Total additional discounts extended to this line item. Additional discount is defined as discount extended on top of volume discount or negotiated prices."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Total additional discount extends on this line item. Additional discount is defined as discount extended on top of volume discount or negotiated prices."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Number SBQQ__AdditionalQuantity__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__AdditionalQuantity__c"
    label = "Additional Quantity"
    _required = false
    precision = 12
    scale = 2
    inlineHelpText = "Additional quantity for this product that contributes to volume discount calculations"
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Additional quantity for this product which contributes to volume discount calculations."
    externalId = false
  }
  salesforce.Checkbox SBQQ__AllowAssetRefund__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__AllowAssetRefund__c"
    label = "Allow Asset Refunds"
    defaultValue = false
    inlineHelpText = "Indicates whether the asset represented by this line may be refunded."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates whether the underlying asset may have its quantity refunded. Only relevant for Amendments."
  }
  salesforce.Number SBQQ__BatchQuantity__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__BatchQuantity__c"
    label = "Batch Quantity"
    _required = false
    precision = 12
    scale = 2
    inlineHelpText = "If products are sold in batches, this stores the quantity in each batch, defaulted from the product."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "For products sold in batches quantity in each batch. Defaulted from the product record."
    externalId = false
  }
  salesforce.Picklist SBQQ__BillingFrequency__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__BillingFrequency__c"
    label = "Billing Frequency"
    _required = false
    restricted = true
    inlineHelpText = "Defines the billing frequency."
    createable = true
    updateable = true
    queryable = true
    description = "Defines the billing frequency."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__BillingFrequency
  }
  salesforce.Picklist SBQQ__BillingType__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__BillingType__c"
    label = "Billing Type"
    _required = false
    restricted = true
    inlineHelpText = "The billing type that defines when the billing occurs. Billing in advance lets you bill your customers for products or services before you provide them; Billing in arrears lets you bill your customers after the products or services are provided."
    createable = true
    updateable = true
    queryable = true
    description = "The billing type that defines when the billing occurs. Billing in advance lets you bill your customers for products or services before you provide them; Billing in arrears lets you bill your customers after the products or services are provided."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__BillingType
  }
  salesforce.Lookup SBQQ__BlockPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__BlockPrice__c"
    label = "Block Price"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__BlockPrice__c,
    ]
    inlineHelpText = "Assign a fixed price to a product based on quantity and quantity range. This overrides the automatic calculation of quantity * unit price."
    createable = true
    updateable = true
    relationshipName = "QuoteLines"
    queryable = true
    description = "Assign a fixed price to a product based on quantity and quantity range. This overrides the automatic calculation of quantity * unit price."
  }
  salesforce.Checkbox SBQQ__Bundle__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Bundle__c"
    label = "Package"
    defaultValue = false
    inlineHelpText = "Indicates whether this line item represents a package; meaning, it includes other line items in this quote."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates whether this line item represents a package; meaning, it includes other line items in this quote."
  }
  salesforce.Number SBQQ__BundledQuantity__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__BundledQuantity__c"
    label = "Original Quantity"
    _required = false
    precision = 12
    scale = 2
    inlineHelpText = "For items with calculated quantities this field holds the original quantity entered by the user."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "For items with calculated quantities this field hold the original (user entered) quantity."
    externalId = false
  }
  salesforce.Checkbox SBQQ__Bundled__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Bundled__c"
    label = "Bundled"
    defaultValue = false
    inlineHelpText = "Indicates the product on this line item is bundled (included) by another product in this quote. Bundled lines items have a zero price and do not allow price or quantity to be edited."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates the product on this line item is bundled (included) by another product in this quote. Bundled lines items are zero price and do not allow price or quantity to be edited."
  }
  salesforce.Checkbox SBQQ__CarryoverLine__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__CarryoverLine__c"
    label = "Carry-Over Line"
    defaultValue = false
    inlineHelpText = "Denotes this line as an auto-selected option of an upgrade bundle."
    createable = true
    updateable = true
    queryable = true
    description = "Denotes this line as an auto-mapped option on an Upgraded Bundle."
  }
  salesforce.Picklist SBQQ__ChargeType__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ChargeType__c"
    label = "Charge Type"
    _required = false
    restricted = true
    inlineHelpText = "The type of the product charge.  This is a system field that is derived from the associated product."
    createable = true
    updateable = true
    queryable = true
    description = "The type of the product charge.  This is a system field that is derived from the associated product."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__ChargeType
  }
  salesforce.Currency SBQQ__ComponentCost__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ComponentCost__c"
    label = "Component Cost"
    _required = false
    inlineHelpText = "Total cost of components in this package."
    createable = true
    updateable = true
    scale = 2
    precision = 16
    queryable = true
    description = "Total cost of components in this package."
  }
  salesforce.Checkbox SBQQ__ComponentDiscountedByPackage__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ComponentDiscountedByPackage__c"
    label = "Component Discounted By Package"
    defaultValue = false
    inlineHelpText = "Fixes additional discount for this component to the parent package discount."
    createable = true
    updateable = true
    queryable = true
    description = "Fixes additional discount for this component to the parent package discount."
  }
  salesforce.Currency SBQQ__ComponentListTotal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ComponentListTotal__c"
    label = "Component List Total"
    _required = false
    inlineHelpText = "List total of components in this configuration. This field is only populated if this line item references a configurable product."
    createable = true
    updateable = true
    scale = 2
    precision = 16
    queryable = true
    description = "List total of components in this configuration. This field is only populated if this line item references configurable product."
  }
  salesforce.Picklist SBQQ__ComponentSubscriptionScope__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ComponentSubscriptionScope__c"
    label = "Component Percent of Total Scope"
    _required = false
    valueSet = [
      {
        fullName = "Package"
        default = false
        label = "Package"
      },
      {
        fullName = "Components"
        default = false
        label = "Components"
      },
      {
        fullName = "Both"
        default = false
        label = "Package & Components"
      },
      {
        fullName = "Entire Hierarchy"
        default = false
        label = "Entire Hierarchy"
      },
    ]
    restricted = false
    inlineHelpText = "Percent of Total scope set at the component level. This field overrides the Percent of Total scope copied from the Product Option."
    createable = true
    updateable = true
    queryable = true
    description = "Subscription scope set at the component level. This field overrides the subscriptions cope copied from the product."
    sorted = false
  }
  salesforce.Currency SBQQ__ComponentTotal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ComponentTotal__c"
    label = "Component Net Total"
    _required = false
    inlineHelpText = "Sum total of components in this configuration. This field is only populated if this line item references a configurable product."
    createable = true
    updateable = true
    scale = 2
    precision = 16
    queryable = true
    description = "Sum total of components in this configuration. This field is only populated if this line item references configurable product."
  }
  salesforce.Checkbox SBQQ__ComponentUpliftedByPackage__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ComponentUpliftedByPackage__c"
    label = "Component Uplifted By Package"
    defaultValue = false
    inlineHelpText = "Fixes uplift for this component to the parent package uplift. Uplift only applies to multi-segmented products."
    createable = true
    updateable = true
    queryable = true
    description = "Fixes uplift for this component to the parent package uplift. Uplift only applies to multi-segmented products."
  }
  salesforce.FormulaText SBQQ__ComponentVisibility__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ComponentVisibility__c"
    label = "Component Visibility"
    _required = false
    formula = "TEXT(SBQQ__ProductOption__r.SBQQ__QuoteLineVisibility__c)"
    inlineHelpText = "Indicates the visibility of the component line item."
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    description = "Visibility of this component line item."
    externalId = false
  }
  salesforce.Percent SBQQ__CompoundDiscountRate__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__CompoundDiscountRate__c"
    label = "Compound Discount (%)"
    _required = false
    inlineHelpText = "Discount rate compounded by quantity (historic)."
    createable = true
    updateable = true
    scale = 3
    precision = 8
    queryable = true
    description = "Discount rate compounded by quantity (historic)."
  }
  salesforce.Checkbox SBQQ__ConfigurationRequired__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ConfigurationRequired__c"
    label = "Configuration Required"
    defaultValue = false
    inlineHelpText = "Flag that marks this quote line as requiring configuration. Can be used by custom code to request this product be re-configured."
    createable = true
    updateable = true
    queryable = true
    description = "Flag that marks this quote line as requiring configuration. Can be used by custom code to request this product be re-configured."
  }
  salesforce.Lookup SBQQ__ContractedPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ContractedPrice__c"
    label = "Contracted Price"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__ContractedPrice__c,
    ]
    inlineHelpText = "Contracted price if the product has negotiated pricing for the opportunity's account. Contracted Prices are available on the Account and can be applied to any product in any price book."
    createable = true
    updateable = true
    relationshipName = "Quote_Lines"
    queryable = true
    description = "Contracted price if the product has negotiated pricing for opportunity's account. Contracted Prices are available on the Account and can be applied to any product in any price book."
  }
  salesforce.Checkbox SBQQ__CostEditable__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__CostEditable__c"
    label = "Cost Editable"
    defaultValue = false
    inlineHelpText = "Specifies whether cost can be edited on this line item."
    createable = true
    updateable = true
    queryable = true
    description = "Specifies whether cost can be edited on this line item."
  }
  salesforce.Lookup SBQQ__Cost__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Cost__c"
    label = "Cost"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__Cost__c,
    ]
    inlineHelpText = "Cost record for this line item."
    createable = true
    updateable = true
    relationshipName = "QuoteLines"
    queryable = true
    description = "Cost record for this line item."
  }
  salesforce.Currency SBQQ__CustomerPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__CustomerPrice__c"
    label = "Customer Unit Price"
    _required = false
    inlineHelpText = "Customer unit price for the product quoted by this line item. This is the Net Unit Price excluding any partner discounts."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Customer unit price for the product quoted by this line item. This is the Net Unit Price excluding any partner discounts."
  }
  salesforce.FormulaCurrency SBQQ__CustomerTotal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__CustomerTotal__c"
    label = "Customer Total"
    _required = false
    formula = "IF(AND(SBQQ__Renewal__c, !SBQQ__Existing__c, ISBLANK(SBQQ__PriorQuantity__c)), 0, SBQQ__CustomerPrice__c * SBQQ__EffectiveQuantity__c)"
    inlineHelpText = "Customer total price for this quote line item. This is the Net Total excluding any partner discounts."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Customer total price for this quote line item. This is the Net Total excluding any partner discounts."
  }
  salesforce.Number SBQQ__DefaultSubscriptionTerm__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__DefaultSubscriptionTerm__c"
    label = "Default Subscription Term"
    _required = false
    precision = 5
    scale = 0
    inlineHelpText = "Term length of the subscription, which only applies if the product is a subscription. It is copied from the Subscription Term of the related product when the line item is first generated."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Term length of the subscription, which only applies if the product is a subscription. It is copied from the Subscription Term of the related product when the line item is first generated."
    externalId = false
  }
  salesforce.Html SBQQ__Description__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Description__c"
    label = "Description"
    _required = false
    inlineHelpText = "Description for this line item."
    createable = true
    updateable = true
    length = 32000
    queryable = true
    description = "Description for this line item."
    visibleLines = 15
  }
  salesforce.Lookup SBQQ__Dimension__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Dimension__c"
    label = "Price Dimension"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__Dimension__c,
    ]
    inlineHelpText = "Dimensions within an MDQ Product that all each segment to be priced independently. Each Product may contain several Price Dimensions. Yearly Price Dimensions are treated as Subscriptions."
    createable = true
    updateable = true
    relationshipName = "Quote_Lines"
    queryable = true
    description = "Dimensions within an MDQ Product that all each segment to be priced independently. Each Product may contain several Price Dimensions. Yearly Price Dimensions are treated as Subscriptions."
  }
  salesforce.Picklist SBQQ__DiscountScheduleType__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__DiscountScheduleType__c"
    label = "Discount Schedule Type"
    _required = false
    valueSet = [
      {
        fullName = "Range"
        default = false
        label = "Range"
      },
      {
        fullName = "Slab"
        default = false
        label = "Slab"
      },
    ]
    restricted = false
    inlineHelpText = "Discount schedule type. Copied from Type field in associated discount schedule."
    createable = true
    updateable = true
    queryable = true
    description = "Discount schedule type. Must be a stored value because it's used in formula fields that are rolled up."
    sorted = false
  }
  salesforce.Lookup SBQQ__DiscountSchedule__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__DiscountSchedule__c"
    label = "Discount Schedule"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__DiscountSchedule__c,
    ]
    inlineHelpText = "Specify discounts in terms of % or Amt to be discounted off the product's price using quantity purchased or term. Set quantity/term ranges in tiers of different discount %. Discount is applied to List Price & resulting total is stored in the Regular Price"
    createable = true
    updateable = true
    relationshipName = "R00N70000001opkuEAA"
    queryable = true
    description = "Specify discounts in terms of % or Amt to be discounted off the product's price using quantity purchased or term. Set quantity/term ranges in tiers of different discount %. Discount is applied to List Price & resulting total is stored in the Regular Price"
  }
  salesforce.Lookup SBQQ__DiscountTier__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__DiscountTier__c"
    label = "Discount Tier"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__DiscountTier__c,
    ]
    inlineHelpText = "Discount tier used by this line item. This field is only populated if a volume discount was applied and the discount schedule is of type \"Range\"."
    createable = true
    updateable = true
    relationshipName = "QuoteLines"
    queryable = true
    description = "Discount tier used by this line item. This field is only populated if a product is volume discounted and discount schedule is of type \"Range\"."
  }
  salesforce.Percent SBQQ__Discount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Discount__c"
    label = "Additional Disc. (%)"
    _required = false
    inlineHelpText = "Additional customer discount extended to this line item expressed in form of a percentage."
    createable = true
    updateable = true
    scale = 2
    precision = 11
    queryable = true
    description = "Additional customer discount extended for this line item expressed in terms of percentage."
  }
  salesforce.Percent SBQQ__DistributorDiscount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__DistributorDiscount__c"
    label = "Distributor Discount"
    _required = false
    inlineHelpText = "This is a discount that is applied to partner price and reflected in the net price."
    createable = true
    updateable = true
    scale = 2
    precision = 5
    queryable = true
    description = "This is a discount that is applied to partner price and reflected in the net price."
  }
  salesforce.Text SBQQ__DynamicOptionId__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__DynamicOptionId__c"
    label = "Dynamic Option ID"
    _required = false
    inlineHelpText = "Identifies feature and dynamic option for this line."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 40
    queryable = true
    description = "Contains feature id and product id to identify the feature and optional SKU associated with this line."
    externalId = false
  }
  salesforce.Date SBQQ__EarliestValidAmendmentStartDate__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__EarliestValidAmendmentStartDate__c"
    label = "Earliest Valid Amendment Start Date"
    _required = false
    inlineHelpText = "The earliest valid start date for this amendment quote line."
    createable = true
    updateable = true
    queryable = true
    description = "The earliest safe date for an amendment quote line to start before it becomes back-dated and therefore forbidden."
  }
  salesforce.FormulaDate SBQQ__EffectiveEndDate__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__EffectiveEndDate__c"
    label = "Effective End Date"
    _required = false
    formula = '''
IF(ISPICKVAL(SBQQ__SubscriptionType__c, "Evergreen"), null,
    IF(ISBLANK(SBQQ__EndDate__c),
        IF(ISBLANK(SBQQ__Group__r.SBQQ__EndDate__c),SBQQ__Quote__r.SBQQ__EndDate__c,SBQQ__Group__r.SBQQ__EndDate__c),SBQQ__EndDate__c)
    )
'''
    inlineHelpText = "Effective end date for this subscription."
    createable = false
    updateable = false
    queryable = true
    description = "Effective end date for this subscription."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.FormulaNumber SBQQ__EffectiveQuantity__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__EffectiveQuantity__c"
    label = "Effective Quantity"
    _required = false
    precision = 18
    scale = 2
    formula = "IF(OR(ISPICKVAL(SBQQ__DiscountScheduleType__c, 'Slab'),ISPICKVAL(SBQQ__PricingMethod__c, 'Block')),IF(OR(AND(!SBQQ__Existing__c, !SBQQ__CarryoverLine__c, SBQQ__Quantity__c == 0),AND(OR(SBQQ__Existing__c, SBQQ__CarryoverLine__c),OR(SBQQ__Quantity__c == SBQQ__PriorQuantity__c - SBQQ__UpgradedQuantity__c,AND(!SBQQ__AllowAssetRefund__c, ISPICKVAL(SBQQ__SubscriptionPricing__c, ''), SBQQ__Quantity__c < SBQQ__PriorQuantity__c - SBQQ__UpgradedQuantity__c)))),0,1),IF(AND(!SBQQ__Existing__c, !SBQQ__CarryoverLine__c),SBQQ__Quantity__c,IF(SBQQ__Quantity__c >= SBQQ__PriorQuantity__c - SBQQ__UpgradedQuantity__c,IF(ISPICKVAL(SBQQ__SubscriptionPricing__c, 'Percent Of Total'),SBQQ__Quantity__c,SBQQ__Quantity__c - SBQQ__PriorQuantity__c + SBQQ__UpgradedQuantity__c),IF(AND(!SBQQ__AllowAssetRefund__c, ISPICKVAL(SBQQ__SubscriptionPricing__c, '')),0,SBQQ__Quantity__c - SBQQ__PriorQuantity__c + SBQQ__UpgradedQuantity__c))))"
    inlineHelpText = "Effective quantity used in computing totals. Same as quantity unless the product is block priced, covered by \"Slab\" discount schedule, or an existing subscription."
    createable = false
    updateable = false
    unique = false
    queryable = true
    description = "Effective quantity used in computing totals. Same as quantity unless the product is block priced, covered by \"Slab\" discount schedule, or an existing subscription."
    externalId = false
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.FormulaDate SBQQ__EffectiveStartDate__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__EffectiveStartDate__c"
    label = "Effective Start Date"
    _required = false
    formula = '''
IF(ISBLANK(SBQQ__StartDate__c),
  IF(ISBLANK(SBQQ__Group__r.SBQQ__StartDate__c),SBQQ__Quote__r.SBQQ__StartDate__c,SBQQ__Group__r.SBQQ__StartDate__c),
  SBQQ__StartDate__c
)
'''
    inlineHelpText = "Effective start date for this subscription."
    createable = false
    updateable = false
    queryable = true
    description = "Effective start date for this subscription."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.FormulaNumber SBQQ__EffectiveSubscriptionTerm__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__EffectiveSubscriptionTerm__c"
    label = "Effective Subscription Term"
    _required = false
    precision = 18
    scale = 0
    formula = '''
IF(ISBLANK(SBQQ__SubscriptionTerm__c),
       IF(ISBLANK(SBQQ__Group__r.SBQQ__SubscriptionTerm__c),SBQQ__Quote__r.SBQQ__SubscriptionTerm__c,SBQQ__Group__r.SBQQ__SubscriptionTerm__c),
       SBQQ__SubscriptionTerm__c
    )
'''
    inlineHelpText = "Effective term for this subscription."
    createable = false
    updateable = false
    unique = false
    queryable = true
    description = "Effective term for this subscription."
    externalId = false
  }
  salesforce.Date SBQQ__EndDate__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__EndDate__c"
    label = "End Date"
    _required = false
    inlineHelpText = "Date the service represented by this line item will end (only applies if product is a subscription)."
    createable = true
    updateable = true
    queryable = true
    description = "Date the service represented by this line item will end (only applies if product is a subscription)."
  }
  salesforce.Checkbox SBQQ__Existing__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Existing__c"
    label = "Existing"
    defaultValue = false
    inlineHelpText = "Indicates the customer already owns this product. This is typically used for products with options during add-on quoting. The product is on the quote solely to drive the Configurator."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates the customer already owns this product. This is typically used for products with options during add-on quoting. The product is on the quote solely to drive the Configurator."
  }
  salesforce.Lookup SBQQ__Favorite__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Favorite__c"
    label = "Favorite"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__Favorite__c,
    ]
    inlineHelpText = "Favorite to which this Quote Line belongs."
    createable = true
    updateable = true
    relationshipName = "QuoteLines"
    queryable = true
    description = "Favorite to which this Quote Line belongs."
  }
  salesforce.Picklist SBQQ__GenerateContractedPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__GenerateContractedPrice__c"
    label = "Generate Contracted Price"
    _required = false
    valueSet = [
      {
        fullName = "Price"
        default = false
        label = "Price"
      },
      {
        fullName = "Discount Schedule"
        default = false
        label = "Discount Schedule"
      },
      {
        fullName = "Do Not Generate"
        default = false
        label = "Do Not Generate"
      },
    ]
    restricted = false
    inlineHelpText = "Will generate a contracted price based on the adjusted quote line if flagged."
    createable = true
    updateable = true
    queryable = true
    description = "Will generate a contracted price based on the adjusted quote line if flagged."
    sorted = false
  }
  salesforce.Currency SBQQ__GrossProfit__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__GrossProfit__c"
    label = "Gross Profit"
    _required = false
    inlineHelpText = "Gross profit amount on this line item."
    createable = true
    updateable = true
    scale = 2
    precision = 16
    queryable = true
    description = "Gross profit amount on this line item."
  }
  salesforce.Lookup SBQQ__Group__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Group__c"
    label = "Group"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__QuoteLineGroup__c,
    ]
    inlineHelpText = "Group to which this line belongs, if any."
    createable = true
    updateable = true
    relationshipName = "LineItems"
    queryable = true
    description = "Group to which this line belongs, if any."
  }
  salesforce.Percent SBQQ__Guidance__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Guidance__c"
    label = "Guidance"
    _required = false
    inlineHelpText = "Ideal low-range discount based on past sales. If sales reps accept this pricing guidance, Salesforce CPQ applies a discount to reach this price."
    createable = true
    updateable = true
    scale = 2
    precision = 18
    queryable = true
    description = "Ideal low-range discount based on past sales. If sales reps accept this pricing guidance, Salesforce CPQ applies a discount to reach this price."
  }
  salesforce.Checkbox SBQQ__HasConsumptionSchedule__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__HasConsumptionSchedule__c"
    label = "Has Consumption Schedules"
    defaultValue = false
    inlineHelpText = "Indicates if this line has at least one consumption schedule"
    createable = true
    updateable = true
    queryable = true
    description = "Indicates if the Quote Line has at least one consumption schedule"
  }
  salesforce.Checkbox SBQQ__Hidden__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Hidden__c"
    label = "Hidden"
    defaultValue = false
    inlineHelpText = "Denotes whether this line item is hidden in generated PDF documents."
    createable = true
    updateable = true
    queryable = true
    description = "Denotes whether this line item is hidden in generated PDF documents."
  }
  salesforce.Checkbox SBQQ__Incomplete__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Incomplete__c"
    label = "Incomplete"
    defaultValue = false
    inlineHelpText = "Flag set internally by application logic when a line is saved to an incomplete database. This may happen when price rules are evaluated. Test this field in validation rules to avoid them firing prematurely. Do NOT add to page layout or otherwise update."
    createable = true
    updateable = true
    queryable = true
    description = "Flag set internally by application logic when a line is saved to an incomplete database. This may happen when price rules are evaluated. Test this field in validation rules to avoid them firing prematurely. Do NOT add to page layout or otherwise update."
  }
  salesforce.Currency SBQQ__ListPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ListPrice__c"
    label = "List Unit Price"
    _required = false
    inlineHelpText = "List unit price for the product quoted by this line item. List Price originates from the price book."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "List unit price for the product quoted by this line item. List Price originates from the price book."
  }
  salesforce.FormulaCurrency SBQQ__ListTotal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ListTotal__c"
    label = "List Total"
    _required = false
    formula = "IF(OR(AND(SBQQ__Renewal__c, !SBQQ__Existing__c, !SBQQ__CarryoverLine__c, ISBLANK(SBQQ__PriorQuantity__c)),SBQQ__Bundled__c),0,CASE(SBQQ__PricingMethod__c,'Block',SBQQ__ProratedListPrice__c * SBQQ__EffectiveQuantity__c,SBQQ__ProratedListPrice__c * IF(OR(AND(!SBQQ__Existing__c, !SBQQ__CarryoverLine__c), ISPICKVAL(SBQQ__SubscriptionPricing__c, 'Percent Of Total')),SBQQ__Quantity__c,SBQQ__Quantity__c - BLANKVALUE(SBQQ__PriorQuantity__c, 0) + BLANKVALUE(SBQQ__UpgradedQuantity__c, 0))))"
    inlineHelpText = "List total price for this quote line item."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "List total price for this quote line item."
  }
  salesforce.Currency SBQQ__MarkupAmount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__MarkupAmount__c"
    label = "Markup (Amt)"
    _required = false
    inlineHelpText = "Markup amount for this line item."
    createable = true
    updateable = true
    scale = 2
    precision = 16
    queryable = true
    description = "Markup amount for this line item."
  }
  salesforce.Percent SBQQ__MarkupRate__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__MarkupRate__c"
    label = "Markup (%)"
    _required = false
    inlineHelpText = "Markup on this line item expressed as a percentage."
    createable = true
    updateable = true
    scale = 2
    precision = 8
    queryable = true
    description = "Markup on this line item expressed as a percentage."
  }
  salesforce.FormulaCurrency SBQQ__Markup__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Markup__c"
    label = "Markup"
    _required = false
    formula = "IF(NOT(ISBLANK(SBQQ__MarkupRate__c)), SBQQ__UnitCost__c * SBQQ__MarkupRate__c, SBQQ__UnitCost__c + SBQQ__MarkupAmount__c)"
    inlineHelpText = "Markup amount on this item. This value is automatically calculated by applying markup rate or absolute amount to the product cost."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Markup amount on this item. This value is automatically calculated by applying markup rate or absolute amount to the product cost."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Currency SBQQ__MaximumPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__MaximumPrice__c"
    label = "Maximum List Unit Price"
    _required = false
    inlineHelpText = "Maximum list unit price for this product. Used to enforce list price ceiling for products with dynamically calculated list prices."
    createable = true
    updateable = true
    scale = 2
    precision = 16
    queryable = true
    description = "Maximum list unit price for this product. Used to enforce list price ceiling for products with dynamically calculated list prices."
  }
  salesforce.Currency SBQQ__MinimumPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__MinimumPrice__c"
    label = "Minimum List Unit Price"
    _required = false
    inlineHelpText = "Minimum list unit price for this product. Used to enforce list price floor for products with dynamically calculated list prices."
    createable = true
    updateable = true
    scale = 0
    precision = 18
    queryable = true
    description = "Minimum list unit price for this product. Used to enforce list price floor for products with dynamically calculated list prices."
  }
  salesforce.Currency SBQQ__NetPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__NetPrice__c"
    label = "Net Unit Price"
    _required = false
    inlineHelpText = "Net unit price for the product quoted by this line item."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Net unit price for the product quoted by this line item."
  }
  salesforce.FormulaCurrency SBQQ__NetTotal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__NetTotal__c"
    label = "Net Total"
    _required = false
    formula = "IF(AND(SBQQ__Renewal__c, !SBQQ__Existing__c, ISBLANK(SBQQ__PriorQuantity__c)), 0, SBQQ__NetPrice__c * SBQQ__EffectiveQuantity__c)"
    inlineHelpText = "Net total price for this quote line item."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Net total price for this quote line item."
  }
  salesforce.Checkbox SBQQ__NonDiscountable__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__NonDiscountable__c"
    label = "Non Discountable"
    defaultValue = false
    inlineHelpText = "Marks this line item as non-discountable."
    createable = true
    updateable = true
    queryable = true
    description = "Marks this line item as non-discountable."
  }
  salesforce.Checkbox SBQQ__NonPartnerDiscountable__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__NonPartnerDiscountable__c"
    label = "Non Partner Discountable"
    defaultValue = false
    inlineHelpText = "Select the checkbox to make this line item non discountable for partners."
    createable = true
    updateable = true
    queryable = true
    description = "Marks this line item non discountable for partners."
  }
  salesforce.Number SBQQ__Number__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Number__c"
    label = "Number"
    _required = false
    precision = 5
    scale = 0
    inlineHelpText = "Number indicating this line's position within its group or quote."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Number indicating this line's position within its group or quote."
    externalId = false
  }
  salesforce.Currency SBQQ__OptionDiscountAmount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__OptionDiscountAmount__c"
    label = "Option Discount (Amt)"
    _required = false
    inlineHelpText = "Discount extended on this product because it's part of a package."
    createable = true
    updateable = true
    scale = 2
    precision = 12
    queryable = true
    description = "Discount extended on this product because it's part of a package."
  }
  salesforce.Percent SBQQ__OptionDiscount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__OptionDiscount__c"
    label = "Option Discount (%)"
    _required = false
    inlineHelpText = "If this line is for an optional SKU, this field captures any discount given to the package and extended to the option."
    createable = true
    updateable = true
    scale = 2
    precision = 5
    queryable = true
    description = "If this line is for an optional SKU, this field captures any discount given to the package and extended to the option."
  }
  salesforce.Number SBQQ__OptionLevel__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__OptionLevel__c"
    label = "Option Level"
    _required = false
    precision = 5
    scale = 0
    inlineHelpText = "Indicates nest level of this option (only applies to lines that are generated from options)."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Indicates nest level of this option (only applies to lines that are generated from options)."
    externalId = false
  }
  salesforce.Picklist SBQQ__OptionType__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__OptionType__c"
    label = "Option Type"
    _required = false
    valueSet = [
      {
        fullName = "Component"
        default = false
        label = "Component"
      },
      {
        fullName = "Accessory"
        default = false
        label = "Accessory"
      },
      {
        fullName = "Related Product"
        default = false
        label = "Related Product"
      },
    ]
    restricted = false
    inlineHelpText = "Indicates the Option Type, which is copied from related Product Option. Determines how quantity is calculated."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates the Option Type, which is copied from related Product Option. Determines how quantity is calculated."
    sorted = false
  }
  salesforce.Checkbox SBQQ__Optional__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Optional__c"
    label = "Optional"
    defaultValue = false
    inlineHelpText = "Marks this line as optional. Optional line items don't contribute to quote totals and are not transferred to the Opportunity."
    createable = true
    updateable = true
    queryable = true
    description = "Marks this line as optional. Optional line items don't contribute to quote totals and are not transferred to the Opportunity."
  }
  salesforce.Currency SBQQ__OriginalPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__OriginalPrice__c"
    label = "Original Price"
    _required = false
    inlineHelpText = "The original unit price for the product quoted by this line item.  Original Price originates from the price book."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "The original unit price for the product quoted by this line item.  Original Price originates from the price book.  Also known as MSRP."
  }
  salesforce.Text SBQQ__OriginalQuoteLineId__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__OriginalQuoteLineId__c"
    label = "Original Quote Line Id"
    _required = false
    inlineHelpText = "The id of the original quote line which this line was derived from."
    createable = true
    updateable = true
    unique = false
    externalId = true
    caseSensitive = false
    length = 255
    queryable = true
    description = "The id of the original quote line which this line was derived from."
  }
  salesforce.Currency SBQQ__OriginalUnitCost__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__OriginalUnitCost__c"
    label = "Original Unit Cost"
    _required = false
    inlineHelpText = "Cost for one unit of product quoted on this line item if Cost Schedules were not applied."
    createable = true
    updateable = true
    scale = 2
    precision = 16
    queryable = true
    description = "Cost for one unit of product quoted on this line item if Cost Schedules were not applied."
  }
  salesforce.FormulaCurrency SBQQ__PackageCost__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PackageCost__c"
    label = "Package Cost"
    _required = false
    formula = "SBQQ__ComponentCost__c + (SBQQ__UnitCost__c * SBQQ__Quantity__c)"
    inlineHelpText = "Total cost for this package including the cost of its components."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Total cost for this package including the cost of its components."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.FormulaCurrency SBQQ__PackageListTotal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PackageListTotal__c"
    label = "Package List Total"
    _required = false
    formula = "SBQQ__ComponentListTotal__c +  SBQQ__ListTotal__c"
    inlineHelpText = "Total list price of this package including its components."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Total list price of this package including its components."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Text SBQQ__PackageProductCode__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PackageProductCode__c"
    label = "Package Product Code"
    _required = false
    inlineHelpText = "A code listing each of this package's components based on their component codes."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 255
    queryable = true
    description = "Product code for the package generated by appending codes of selected components according to specified pattern."
    externalId = false
  }
  salesforce.Html SBQQ__PackageProductDescription__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PackageProductDescription__c"
    label = "Package Product Description"
    _required = false
    inlineHelpText = "A description of each component in this package."
    createable = true
    updateable = true
    length = 32000
    queryable = true
    description = "Product Description for the package generated by appending descriptions of selected components according to specified pattern."
    visibleLines = 25
  }
  salesforce.FormulaCurrency SBQQ__PackageTotal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PackageTotal__c"
    label = "Package Total"
    _required = false
    formula = "SBQQ__ComponentTotal__c + SBQQ__NetTotal__c"
    inlineHelpText = "Total price of this package including its components."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Total price of this package including its components."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Percent SBQQ__PartnerDiscount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PartnerDiscount__c"
    label = "Partner Discount"
    _required = false
    inlineHelpText = "If your organization sells through a channel/VARI, a Partner Discount on a quote or individual product line item can be given. Partner discounts are applied after all automatic and discretionary discounts."
    createable = true
    updateable = true
    scale = 2
    precision = 5
    queryable = true
    description = "If your organization sells through a channel/VARl, you can give a “partner discount” on quote or the individual product line item on the quote. By default, partner discounts are applied after all automatic and discretionary discounts. The partner discount is taken into account in the Partner Price."
  }
  salesforce.Currency SBQQ__PartnerPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PartnerPrice__c"
    label = "Partner Unit Price"
    _required = false
    inlineHelpText = "Partner unit price. Price after partner discount but before distributor discount."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Partner unit price. Price after partner discount but before distributor discount."
  }
  salesforce.FormulaCurrency SBQQ__PartnerTotal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PartnerTotal__c"
    label = "Partner Total"
    _required = false
    formula = "IF(AND(SBQQ__Renewal__c, !SBQQ__Existing__c, ISBLANK(SBQQ__PriorQuantity__c)), 0, SBQQ__PartnerPrice__c * SBQQ__EffectiveQuantity__c)"
    inlineHelpText = "Total of the Partner Discount."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Total of the Partner Discount. By default, partner discounts are applied after all automatic and discretionary discounts. The partner discount is taken into account in the Partner Price."
  }
  salesforce.Currency SBQQ__PreviousSegmentPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PreviousSegmentPrice__c"
    label = "Previous Segment Regular Price"
    _required = false
    inlineHelpText = "When set, this value takes the place of the previous segment's regular price when calculating Uplift for this segment."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "When set, this value takes the place of the previous segment's regular price when calculating Uplift for this segment."
  }
  salesforce.Currency SBQQ__PreviousSegmentUplift__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PreviousSegmentUplift__c"
    label = "Previous Segment Uplift"
    _required = false
    inlineHelpText = "When set, this value takes the place of the previous segment's uplift amount when calculating Uplift for this segment."
    createable = true
    updateable = true
    scale = 2
    precision = 12
    queryable = true
    description = "When set, this value takes the place of the previous segment's uplift amount when calculating Uplift for this segment."
  }
  salesforce.Checkbox SBQQ__PriceEditable__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PriceEditable__c"
    label = "Price Editable"
    defaultValue = false
    inlineHelpText = "Flag that indicates if price is editable for this line item."
    createable = true
    updateable = true
    queryable = true
    description = "Flag that indicates if price is editable for this line item"
  }
  salesforce.Text SBQQ__PricebookEntryId__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PricebookEntryId__c"
    label = "Pricebook Entry Id"
    _required = false
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 64
    queryable = true
    externalId = false
  }
  salesforce.Checkbox SBQQ__PricingMethodEditable__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PricingMethodEditable__c"
    label = "Pricing Method Editable"
    defaultValue = false
    inlineHelpText = "Flag indicating if this line item's price is editable."
    createable = true
    updateable = true
    queryable = true
    description = "Specifies whether pricing method can be edited on this line item."
  }
  salesforce.Picklist SBQQ__PricingMethod__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PricingMethod__c"
    label = "Pricing Method"
    _required = false
    valueSet = [
      {
        fullName = "List"
        default = true
        label = "List"
      },
      {
        fullName = "Cost"
        default = false
        label = "Cost"
      },
      {
        fullName = "Block"
        default = false
        label = "Block"
      },
      {
        fullName = "Percent Of Total"
        default = false
        label = "Percent Of Total"
      },
      {
        fullName = "Custom"
        default = false
        label = "Custom"
      },
    ]
    restricted = false
    inlineHelpText = "Indicates how the price for this line item is calculated. \"List\" = subtracting discount from list price. \"Cost\" = adding markup to cost."
    createable = true
    updateable = true
    queryable = true
    description = "Determines how the price for this line item is set. \"List\" = calculated by subtracting discount from list price. \"Cost\"  = calculated by adding markup to cost."
    sorted = false
  }
  salesforce.Number SBQQ__PriorQuantity__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__PriorQuantity__c"
    label = "Prior Quantity"
    _required = false
    precision = 12
    scale = 2
    inlineHelpText = "Combined quantity of this product from prior purchases."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Combined quantity of this product from prior purchases."
    externalId = false
  }
  salesforce.FormulaText SBQQ__ProductCode__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ProductCode__c"
    label = "Product Code"
    _required = false
    formula = "SBQQ__Product__r.ProductCode"
    inlineHelpText = "Code for the product referenced by this line."
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    description = "Code for the product referenced by this line."
    externalId = false
  }
  salesforce.FormulaText SBQQ__ProductFamily__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ProductFamily__c"
    label = "Product Family"
    _required = false
    formula = "TEXT(SBQQ__Product__r.Family)"
    inlineHelpText = "How you would categorize/group/organize this within Salesforce (whether it's a new or existing Product Family). Additionally, this field can be used during product selection to filter to the correct product or product SKU."
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    description = "How you would categorize/group/organize this within Salesforce (whether it's a new or existing Product Family). Additionally, this field can be used during product selection to filter to the correct product or product SKU."
    externalId = false
  }
  salesforce.FormulaText SBQQ__ProductName__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ProductName__c"
    label = "Product Name"
    _required = false
    formula = "SBQQ__Product__r.Name"
    inlineHelpText = "Name for the product referenced by this line item."
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    description = "Name for the product referenced by this line item."
    externalId = false
  }
  salesforce.Lookup SBQQ__ProductOption__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ProductOption__c"
    label = "Product Option"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__ProductOption__c,
    ]
    inlineHelpText = "Product option that generated this line (if any)."
    createable = true
    updateable = true
    relationshipName = "Quote_Lines"
    queryable = true
    description = "Product option that generated this line (if any)."
  }
  salesforce.Picklist SBQQ__ProductSubscriptionType__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ProductSubscriptionType__c"
    label = "Product Subscription Type"
    _required = false
    restricted = true
    inlineHelpText = "Set the quote line's product subscription type."
    createable = true
    updateable = true
    queryable = true
    description = "Set the quote line's product subscription type."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__SubscriptionType
  }
  salesforce.Lookup SBQQ__Product__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Product__c"
    label = "Product"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.Product2,
    ]
    inlineHelpText = "Product quoted by this line item."
    createable = true
    updateable = true
    relationshipName = "R00N70000001lXB6EAM"
    queryable = true
    description = "Product quoted by this line item."
  }
  salesforce.Number SBQQ__ProrateMultiplier__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ProrateMultiplier__c"
    label = "Prorate Multiplier"
    _required = false
    precision = 8
    scale = 4
    inlineHelpText = "Calculated ratio used to compute Prorated Price."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Calculated ratio used to compute Prorated Price."
    externalId = false
  }
  salesforce.Currency SBQQ__ProratedListPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ProratedListPrice__c"
    label = "Prorated List Price"
    _required = false
    inlineHelpText = "Prorated list unit price."
    createable = true
    updateable = true
    scale = 2
    precision = 18
    queryable = true
    description = "Prorated list unit price."
  }
  salesforce.Currency SBQQ__ProratedPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__ProratedPrice__c"
    label = "Prorated Unit Price"
    _required = false
    inlineHelpText = "Prorated price for the product quoted by this line item. This price will only differ from Special Price if the product is a subscription and the line item is being prorated."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Prorated price for the product quoted by this line item. This price will only differ from Special Price if the product is a subscription and the line item is being prorated."
  }
  salesforce.Number SBQQ__Quantity__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Quantity__c"
    label = "Quantity"
    _required = false
    precision = 12
    scale = 2
    inlineHelpText = "Quantity being quoted."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Quantity being quoted."
    externalId = false
  }
  salesforce.Currency SBQQ__RegularPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__RegularPrice__c"
    label = "Regular Unit Price"
    _required = false
    inlineHelpText = "Unit price before additional discount."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Unit price before additional discount."
  }
  salesforce.FormulaCurrency SBQQ__RegularTotal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__RegularTotal__c"
    label = "Regular Total"
    _required = false
    formula = "IF(AND(SBQQ__Renewal__c, !SBQQ__Existing__c, ISBLANK(SBQQ__PriorQuantity__c)), 0, SBQQ__RegularPrice__c * SBQQ__EffectiveQuantity__c)"
    inlineHelpText = "Unit price before additional discount multiplied by quantity."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Unit price before additional discount multiplied by quantity."
  }
  salesforce.Checkbox SBQQ__Renewal__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Renewal__c"
    label = "Renewal"
    defaultValue = false
    inlineHelpText = "Indicates this line item represents a product being renewed. This field should not be modified."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates this line item represents a product being renewed. Only non-subscription products for quote type \"Renewal\" will have this field set to true. Under normal circumstances this field should not be modified via UI."
  }
  salesforce.Lookup SBQQ__RenewedAsset__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__RenewedAsset__c"
    label = "Renewed Asset"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.Asset,
    ]
    inlineHelpText = "Asset being renewed if this line item represents product renewal."
    createable = true
    updateable = true
    relationshipName = "Quote_Lines"
    queryable = true
    description = "Asset being renewed if this line item represents product renewal."
  }
  salesforce.Lookup SBQQ__RenewedSubscription__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__RenewedSubscription__c"
    label = "Renewed Subscription"
    _required = false
    allowLookupRecordDeletion = false
    referenceTo = [
      salesforce.SBQQ__Subscription__c,
    ]
    inlineHelpText = "Subscription being renewed by this quote line."
    createable = true
    updateable = true
    relationshipName = "RenewalQuoteLines"
    queryable = true
    description = "Subscription being renewed by this quote line."
  }
  salesforce.Lookup SBQQ__RequiredBy__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__RequiredBy__c"
    label = "Required By"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__QuoteLine__c,
    ]
    inlineHelpText = "Indicates which other product on this quote requires it."
    createable = true
    updateable = true
    relationshipName = "Quote_Lines"
    queryable = true
    description = "Links this line to another line in the same quote whose product requires this line's product."
  }
  salesforce.Number SBQQ__SegmentIndex__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SegmentIndex__c"
    label = "Segment Index"
    _required = false
    precision = 2
    scale = 0
    inlineHelpText = "For multi-segmented Products, Index representing this Quote Line's position in the segment table."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "For multi-segmented Products, Index representing this Quote Line's position in the segment table."
    externalId = false
  }
  salesforce.Text SBQQ__SegmentKey__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SegmentKey__c"
    label = "Segment Key"
    _required = false
    inlineHelpText = "For multi-segmented Products, this is a shared key used to group multi-dimensional Quote Lines together."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 30
    queryable = true
    description = "For multi-segmented Products, this is a shared key used to group multi-dimensional Quote Lines together."
    externalId = false
  }
  salesforce.Text SBQQ__SegmentLabel__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SegmentLabel__c"
    label = "Segment Label"
    _required = false
    inlineHelpText = "For multi-segmented Products, this is the Column header label (e.g. \"Year 1\") associated with this line."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 25
    queryable = true
    description = "For multi-segmented Products, this is the Column header label (e.g. \"Year 1\") associated with this line."
    externalId = false
  }
  salesforce.Lookup SBQQ__Source__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Source__c"
    label = "Source"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__QuoteLine__c,
    ]
    inlineHelpText = "Source of cloned quote line."
    createable = true
    updateable = true
    relationshipName = "Clones"
    queryable = true
    description = "Source of cloned quote line."
  }
  salesforce.Text SBQQ__SpecialPriceDescription__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SpecialPriceDescription__c"
    label = "Special Price Description"
    _required = false
    inlineHelpText = "Name of the Discount Tier or Contacted Price applied to achieve the special price for this line item."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 80
    queryable = true
    description = "Name of the Discount Tier or description of Contracted Price that generated special price for this line item"
    externalId = false
  }
  salesforce.Picklist SBQQ__SpecialPriceType__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SpecialPriceType__c"
    label = "Special Price Type"
    _required = false
    valueSet = [
      {
        fullName = "Contracted Price"
        default = false
        label = "Contracted Price"
      },
      {
        fullName = "Renewal"
        default = false
        label = "Renewal"
      },
      {
        fullName = "Custom"
        default = false
        label = "Custom"
      },
    ]
    restricted = false
    inlineHelpText = "Stores the type of special price offered on this line item. Null value indicates there is no special pricing."
    createable = true
    updateable = true
    queryable = true
    description = "Stores the type of special price offered on this line item. Null value indicates there is no special pricing. Under normal circumstances this field should not be modified via UI."
    sorted = false
  }
  salesforce.Currency SBQQ__SpecialPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SpecialPrice__c"
    label = "Special Price"
    _required = false
    inlineHelpText = "Special unit price for this line item, such as volume discount or contracted price."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Special (volume-discounted or contracted) unit price for the product being quoted by this line item."
  }
  salesforce.Date SBQQ__StartDate__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__StartDate__c"
    label = "Start Date"
    _required = false
    inlineHelpText = "The date the subscription for this product begins."
    createable = true
    updateable = true
    queryable = true
    description = "Date the service represented by this line item will begin (only applies if product is a subscription)."
  }
  salesforce.LongTextArea SBQQ__SubscribedAssetIds__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SubscribedAssetIds__c"
    label = "Subscribed Asset IDs"
    _required = false
    inlineHelpText = "List of assets covered by this subscription line item. Do not update unless instructed."
    createable = true
    updateable = true
    length = 19000
    queryable = true
    description = "Comma separated list of asset IDs covered by this subscription line. Only applicable to renewal quotes."
    visibleLines = 3
  }
  salesforce.Text SBQQ__SubscriptionBase__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SubscriptionBase__c"
    label = "Percent of Total Base"
    _required = false
    inlineHelpText = "Determines whether Percent of Total is calculated off List or Net product prices."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 30
    queryable = true
    description = "Determines the price that serves as the base for percent-of-total calculations."
    externalId = false
  }
  salesforce.Picklist SBQQ__SubscriptionCategory__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SubscriptionCategory__c"
    label = "Percent of Total Category"
    _required = false
    valueSet = [
      {
        fullName = "Hardware"
        default = false
        label = "Hardware"
      },
      {
        fullName = "Software"
        default = false
        label = "Software"
      },
    ]
    restricted = false
    inlineHelpText = "Category defined on the product to limit percent-of-total calculations to certain products. Copied from the product record."
    createable = true
    updateable = true
    queryable = true
    description = "Category defined on the product to limit percent-of-total calculations to certain products. Copied from the product record."
    sorted = false
  }
  salesforce.Percent SBQQ__SubscriptionPercent__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SubscriptionPercent__c"
    label = "Percent of Total (%)"
    _required = false
    inlineHelpText = "Percent of Total to be used when calculating this line item price."
    createable = true
    updateable = true
    scale = 3
    precision = 7
    queryable = true
    description = "Percent of non-subscription total to be used as the price of this subscription."
  }
  salesforce.Picklist SBQQ__SubscriptionPricing__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SubscriptionPricing__c"
    label = "Subscription Pricing"
    _required = false
    valueSet = [
      {
        fullName = "Fixed Price"
        default = false
        label = "Fixed Price"
      },
      {
        fullName = "Percent Of Total"
        default = false
        label = "Percent Of Total"
      },
    ]
    restricted = false
    inlineHelpText = "Indicates how the subscription price is calculated. If this is blank, the line items is not a subscription product."
    createable = true
    updateable = true
    queryable = true
    description = "Determines how the subscription on this line item is priced. Blank value means this line contains product that's not a subscription."
    sorted = false
  }
  salesforce.Picklist SBQQ__SubscriptionScope__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SubscriptionScope__c"
    label = "Percent of Total Scope"
    _required = false
    valueSet = [
      {
        fullName = "Quote"
        default = true
        label = "Quote"
      },
      {
        fullName = "Group"
        default = false
        label = "Group"
      },
    ]
    restricted = false
    inlineHelpText = "Indicates how percent of total prices are calculated: Quote uses all the non-subscription and include in percent of total products in the quote while Group uses only non-subscription products and include in percent of total products in the same group."
    createable = true
    updateable = true
    queryable = true
    description = "Determines how percent of total product prices are calculated. If scope is set to \"Quote\" any non-subscription and include in percent of total product is used in calculating every percent of total price. If scope is set to \"Group\" only products in the same group as the percent of total product are used in calculation."
    sorted = false
  }
  salesforce.Currency SBQQ__SubscriptionTargetPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SubscriptionTargetPrice__c"
    label = "Percent of Total Target Price"
    _required = false
    inlineHelpText = "Price of the target product on which percent of total should calculate."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Price of the subscription target product on which maintenance should calculate."
  }
  salesforce.Number SBQQ__SubscriptionTerm__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SubscriptionTerm__c"
    label = "Subscription Term"
    _required = false
    precision = 5
    scale = 0
    inlineHelpText = "Term for this subscription. If this product is not a subscription this value has no effect."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Term for the subscription product in this line. If the product is not a subscription this value has no effect."
    externalId = false
  }
  salesforce.Picklist SBQQ__SubscriptionType__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__SubscriptionType__c"
    label = "Subscription Type"
    _required = false
    restricted = true
    fieldDependency = {
      controllingField = "SBQQ__ProductSubscriptionType__c"
      valueSettings = [
        {
          valueName = "Renewable"
          controllingFieldValue = [
            "Renewable",
            "Renewable/Evergreen",
          ]
        },
        {
          valueName = "One-time"
          controllingFieldValue = [
            "One-time",
          ]
        },
        {
          valueName = "Evergreen"
          controllingFieldValue = [
            "Renewable/Evergreen",
            "Evergreen",
          ]
        },
      ]
    }
    inlineHelpText = "Indicates the subscription type to determine contract's pricing."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates the subscription type to determine contract's pricing."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__SubscriptionType
  }
  salesforce.Text SBQQ__TaxCode__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__TaxCode__c"
    label = "Tax code"
    _required = false
    inlineHelpText = "Specifies the tax code for taxation rules."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 255
    queryable = true
    description = "Specifies the tax code for taxation rules."
    externalId = false
  }
  salesforce.Checkbox SBQQ__Taxable__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Taxable__c"
    label = "Taxable"
    defaultValue = false
    inlineHelpText = "Indicates if the line item is taxable"
    createable = true
    updateable = true
    queryable = true
    description = "Is this line item taxable."
  }
  salesforce.Lookup SBQQ__TermDiscountSchedule__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__TermDiscountSchedule__c"
    label = "Term Discount Schedule"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__DiscountSchedule__c,
    ]
    inlineHelpText = "Schedule for discounts based on subscription term. Setting this to \"Group\" applies the discount rate for the group term, while setting it to \"Quote\" applies the discount rate for the entire quote term, regardless of the different terms in your groups."
    createable = true
    updateable = true
    relationshipName = "TermDiscountedQuoteLines"
    queryable = true
    description = "Schedule for discounts based on subscription term. This is useful when you want to show a breakdown of payments in separate groups, for different terms, yet you want to discount reflected for the entire duration of the subscription. Leave Term Discount Level blank if you want discount schedules applied based on the term of each line item."
  }
  salesforce.Lookup SBQQ__TermDiscountTier__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__TermDiscountTier__c"
    label = "Term Discount Tier"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__DiscountTier__c,
    ]
    inlineHelpText = "Tier within the term discount schedule used to discount this line item."
    createable = true
    updateable = true
    relationshipName = "TermDiscountedQuoteLines"
    queryable = true
    description = "Tier within the term discount schedule used to discount this line item."
  }
  salesforce.Currency SBQQ__TermDiscount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__TermDiscount__c"
    label = "Term Discount"
    _required = false
    inlineHelpText = "Discount calculated by applying subscription term against term discount schedule."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Discount calculated by applying subscription term against term discount schedule."
  }
  salesforce.FormulaCurrency SBQQ__TotalDiscountAmount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__TotalDiscountAmount__c"
    label = "Total Discount (Amt)"
    _required = false
    formula = '''
IF(SBQQ__Bundled__c, 0,
IF(ISPICKVAL(SBQQ__DiscountScheduleType__c, 'Slab') && NOT(SBQQ__Existing__c), (SBQQ__ProratedListPrice__c * SBQQ__Quantity__c - SBQQ__CustomerPrice__c),
IF(ISPICKVAL(SBQQ__DiscountScheduleType__c, 'Slab') && SBQQ__Existing__c, (SBQQ__ProratedListPrice__c * (SBQQ__Quantity__c-SBQQ__PriorQuantity__c) - SBQQ__CustomerPrice__c),
(SBQQ__ProratedListPrice__c -  SBQQ__CustomerPrice__c) * SBQQ__EffectiveQuantity__c)))
'''
    inlineHelpText = "Total discount amount for this line item including volume discount, contracted discount, and additional discount."
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    description = "Total discount amount for this line item including volume discount, contracted discount, and additional discount."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.FormulaPercent SBQQ__TotalDiscountRate__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__TotalDiscountRate__c"
    label = "Total Discount (%)"
    _required = false
    formula = '''
IF(SBQQ__ProratedListPrice__c == 0, 0,
IF(ISPICKVAL(SBQQ__DiscountScheduleType__c, 'Slab') && NOT(SBQQ__Existing__c),
IF(SBQQ__Quantity__c == 0, 0, (SBQQ__ProratedListPrice__c * SBQQ__Quantity__c - SBQQ__CustomerPrice__c) / (SBQQ__Quantity__c * SBQQ__ProratedListPrice__c)),
IF(ISPICKVAL(SBQQ__DiscountScheduleType__c, 'Slab') && SBQQ__Existing__c,
IF(SBQQ__Quantity__c == SBQQ__PriorQuantity__c, 0, (SBQQ__ProratedListPrice__c * (SBQQ__Quantity__c-SBQQ__PriorQuantity__c) - SBQQ__CustomerPrice__c) / ((SBQQ__Quantity__c-SBQQ__PriorQuantity__c) * SBQQ__ProratedListPrice__c)),
(SBQQ__ProratedListPrice__c - SBQQ__CustomerPrice__c) / SBQQ__ProratedListPrice__c)))
'''
    inlineHelpText = "Total discount for this line item including volume discount, contracted discount, and additional discount."
    createable = false
    updateable = false
    scale = 3
    precision = 18
    queryable = true
    description = "Total discount for this line item including volume discount, contracted discount, and additional discount."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Currency SBQQ__UnitCost__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__UnitCost__c"
    label = "Unit Cost"
    _required = false
    inlineHelpText = "Cost for one unit of product quoted on this line item."
    createable = true
    updateable = true
    scale = 2
    precision = 16
    queryable = true
    description = "Cost for one unit of product quoted on this line item."
  }
  salesforce.Currency SBQQ__UnproratedNetPrice__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__UnproratedNetPrice__c"
    label = "Unprorated Net Price"
    _required = false
    inlineHelpText = "The full term net price for individual line."
    createable = true
    updateable = true
    scale = 2
    precision = 16
    queryable = true
    description = "The full-term Net Price."
  }
  salesforce.Lookup SBQQ__UpgradedAsset__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__UpgradedAsset__c"
    label = "Upgraded Asset"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.Asset,
    ]
    inlineHelpText = "Asset being upgraded by this quote line. When the quote is contracted this asset will have its Usage End Date populated to indicate it's retired."
    createable = true
    updateable = true
    relationshipName = "UpgradeLines"
    queryable = true
    description = "Asset being upgraded by this quote line. Only populated if this quote line represents an upgrade."
  }
  salesforce.Number SBQQ__UpgradedQuantity__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__UpgradedQuantity__c"
    label = "Upgraded Quantity"
    _required = false
    precision = 12
    scale = 2
    inlineHelpText = "Portion of this line's Prior Quantity being upgraded to another product."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Quantity being upgraded."
    externalId = false
  }
  salesforce.Lookup SBQQ__UpgradedSubscription__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__UpgradedSubscription__c"
    label = "Upgraded Subscription"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__Subscription__c,
    ]
    inlineHelpText = "Subscription being upgraded by this quote line. When the quote is contracted this subscription will have its Terminated Date field populated."
    createable = true
    updateable = true
    relationshipName = "UpgradeLines"
    queryable = true
    description = "Subscription being upgraded by this quote line."
  }
  salesforce.Currency SBQQ__UpliftAmount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__UpliftAmount__c"
    label = "Uplift (Amt)"
    _required = false
    inlineHelpText = "Uplift (Amt) is measured as a currency amount. This is a system-calculated field, as Uplift can only be applied to MDQ segments in percent."
    createable = true
    updateable = true
    scale = 2
    precision = 12
    queryable = true
    description = "Uplift (Amt) is measured as a currency amount. This is a system-calculated field, as Uplift can only be applied to MDQ segments in percent."
  }
  salesforce.Percent SBQQ__Uplift__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__Uplift__c"
    label = "Uplift"
    _required = false
    defaultValueFormula = "0.0"
    inlineHelpText = "Uplift is applied as a % against the previous year's price; the resulting price is entered into the Regular Price field on top of Special or Contracted Prices. Uplifts compound year after year. Uplift cannot be applied to the 1st Year of any Subscription."
    createable = true
    updateable = true
    scale = 2
    precision = 9
    queryable = true
    description = "Uplift is applied as a % against the previous year's price; the resulting price is entered into the Regular Price field on top of Special or Contracted Prices. Uplifts compound year after year. Uplift cannot be applied to the 1st Year of any Subscription."
  }
  salesforce.Percent SBQQ__VolumeDiscount__c {
    apiName = "SBQQ__QuoteLine__c.SBQQ__VolumeDiscount__c"
    label = "Volume Discount"
    _required = false
    inlineHelpText = "Specify volume discounts based on a % of the product's price to be discounted using the quantity purchased or term. You can set the quantity or term ranges in tiers of different discount %. You can also apply discount schedules to Subscription Term."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Discount schedules allow you to specify volume discounts based on a percentage of the product's price to be discounted using the quantity purchased or term. You can set the quantity or term ranges in tiers of different discount percentages. You can also apply discount schedules to Subscription Term."
  }
  salesforce.FormulaNumber Previous_Quantity__c {
    apiName = "SBQQ__QuoteLine__c.Previous_Quantity__c"
    label = "Previous Quantity"
    _required = false
    precision = 18
    scale = 2
    formula = "SBQQ__PriorQuantity__c"
    createable = false
    updateable = false
    unique = false
    queryable = true
    externalId = false
    formulaTreatBlanksAs = "BlankAsZero"
    _generated_dependencies = [
      salesforce.SBQQ__QuoteLine__c.field.SBQQ__PriorQuantity__c,
    ]
  }
  salesforce.Number Usable_Capacity__c {
    apiName = "SBQQ__QuoteLine__c.Usable_Capacity__c"
    label = "Usable Capacity"
    _required = false
    precision = 6
    scale = 0
    createable = true
    updateable = true
    unique = false
    queryable = true
    externalId = false
  }
  salesforce.FormulaCurrency Premium_SW_support__c {
    apiName = "SBQQ__QuoteLine__c.Premium_SW_support__c"
    label = "Premium SW support"
    _required = false
    formula = '''
IF(SBQQ__SubscriptionTerm__c <= 23, 38*SBQQ__SubscriptionTerm__c,
IF(SBQQ__SubscriptionTerm__c <= 35, 37*SBQQ__SubscriptionTerm__c,
IF(SBQQ__SubscriptionTerm__c <= 47, 33*SBQQ__SubscriptionTerm__c,
IF(SBQQ__SubscriptionTerm__c <= 59, 32*SBQQ__SubscriptionTerm__c,
IF(SBQQ__SubscriptionTerm__c <= 60, 28*SBQQ__SubscriptionTerm__c,
80
)))))
'''
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    formulaTreatBlanksAs = "BlankAsZero"
    _generated_dependencies = [
      salesforce.SBQQ__QuoteLine__c.field.SBQQ__SubscriptionTerm__c,
    ]
  }
  salesforce.FormulaNumber Quantity_TB__c {
    apiName = "SBQQ__QuoteLine__c.Quantity_TB__c"
    label = "Quantity TB"
    _required = false
    precision = 18
    scale = 0
    formula = "SBQQ__Quote__r.Quantity_TB__c"
    createable = false
    updateable = false
    unique = false
    queryable = true
    externalId = false
    formulaTreatBlanksAs = "BlankAsZero"
    _generated_dependencies = [
      salesforce.SBQQ__QuoteLine__c.field.SBQQ__Quote__c,
      salesforce.SBQQ__Quote__c.field.Quantity_TB__c,
    ]
  }
  salesforce.FormulaCurrency Pre_Paid_SW_Price__c {
    apiName = "SBQQ__QuoteLine__c.Pre_Paid_SW_Price__c"
    label = "Pre Paid SW Price"
    _required = false
    formula = '''
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 23 && SBQQ__Quantity__c <= 999, 84,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 23 && SBQQ__Quantity__c <= 1999, 76,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 23 && SBQQ__Quantity__c <= 4999 , 68,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 23 && SBQQ__Quantity__c > 4999, 60,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 24 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 35 && SBQQ__Quantity__c <= 999 , 75.6,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 24 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 35 && SBQQ__Quantity__c <= 1999 , 68.4,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 24 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 35 && SBQQ__Quantity__c <= 4999 , 61.2,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 24 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 35 && SBQQ__Quantity__c > 4999 , 54,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 36 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 47 && SBQQ__Quantity__c <= 999 , 58.8,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 24 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 47 && SBQQ__Quantity__c <= 1999 , 53.2,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 24 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 47 && SBQQ__Quantity__c <= 4999 , 47.6,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 24 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 47 && SBQQ__Quantity__c > 4999 , 42,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 48 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 59 && SBQQ__Quantity__c <= 999 , 55.944,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 48 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 59  && SBQQ__Quantity__c <= 1999 , 50.616,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 48 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 59  && SBQQ__Quantity__c <= 4999, 45.288,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 48 && SBQQ__Quote__r.SBQQ__SubscriptionTerm__c <= 59 && SBQQ__Quantity__c > 4999 , 39.96,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 60 && SBQQ__Quantity__c <= 999 , 47.04,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 60 && SBQQ__Quantity__c <= 1999, 42.56,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 60 && SBQQ__Quantity__c <= 4999, 38.08,
IF ( SBQQ__Quote__r.SBQQ__SubscriptionTerm__c >= 60 && SBQQ__Quantity__c > 4999 , 33.6,
84))))))))))))))))))))
'''
    createable = false
    updateable = false
    scale = 2
    precision = 18
    queryable = true
    formulaTreatBlanksAs = "BlankAsZero"
    _generated_dependencies = [
      salesforce.SBQQ__QuoteLine__c.field.SBQQ__Quote__c,
      salesforce.SBQQ__QuoteLine__c.field.SBQQ__Quantity__c,
      salesforce.SBQQ__Quote__c.field.SBQQ__SubscriptionTerm__c,
    ]
  }
}
