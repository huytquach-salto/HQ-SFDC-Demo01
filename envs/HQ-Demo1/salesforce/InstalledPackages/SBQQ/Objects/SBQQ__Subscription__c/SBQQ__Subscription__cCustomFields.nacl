type salesforce.SBQQ__Subscription__c {
  salesforce.Lookup SBQQ__Account__c {
    apiName = "SBQQ__Subscription__c.SBQQ__Account__c"
    label = "Account"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.Account,
    ]
    inlineHelpText = "Account that owns this subscription. This relationship is used for volume discount calculations."
    createable = true
    updateable = true
    relationshipName = "Subscriptions"
    queryable = true
    description = "Account that owns this subscription. This relationship is used for volume discount calculations."
  }
  salesforce.Currency SBQQ__AdditionalDiscountAmount__c {
    apiName = "SBQQ__Subscription__c.SBQQ__AdditionalDiscountAmount__c"
    label = "Additional Disc. (Amt)"
    _required = false
    inlineHelpText = "Additional Discount for this Subscription, if expressed as an amount"
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Additional Discount for this Subscription, if expressed as an amount"
  }
  salesforce.Picklist SBQQ__BillingFrequency__c {
    apiName = "SBQQ__Subscription__c.SBQQ__BillingFrequency__c"
    label = "Billing Frequency"
    _required = false
    restricted = true
    inlineHelpText = "Defines the billing frequency."
    createable = true
    updateable = true
    queryable = true
    description = "Defines the billing frequency."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__BillingFrequency
  }
  salesforce.Picklist SBQQ__BillingType__c {
    apiName = "SBQQ__Subscription__c.SBQQ__BillingType__c"
    label = "Billing Type"
    _required = false
    restricted = true
    inlineHelpText = "The billing type that defines when the billing occurs. Billing in advance lets you bill your customers for products or services before you provide them; Billing in arrears lets you bill your customers after the products or services are provided."
    createable = true
    updateable = true
    queryable = true
    description = "The billing type that defines when the billing occurs. Billing in advance lets you bill your customers for products or services before you provide them; Billing in arrears lets you bill your customers after the products or services are provided."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__BillingType
  }
  salesforce.Checkbox SBQQ__Bundle__c {
    apiName = "SBQQ__Subscription__c.SBQQ__Bundle__c"
    label = "Package"
    defaultValue = false
    inlineHelpText = "Indicates whether this line item represents a package; meaning, it includes other line items in this quote."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates whether this line item represents a package; meaning, it includes other line items in this quote."
  }
  salesforce.Number SBQQ__BundledQuantity__c {
    apiName = "SBQQ__Subscription__c.SBQQ__BundledQuantity__c"
    label = "Original Quantity"
    _required = false
    precision = 12
    scale = 2
    inlineHelpText = "For items with calculated quantities this field holds the original quantity entered by the user."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "For items with calculated quantities this field hold the original (user entered) quantity."
    externalId = false
  }
  salesforce.Checkbox SBQQ__Bundled__c {
    apiName = "SBQQ__Subscription__c.SBQQ__Bundled__c"
    label = "Bundled"
    defaultValue = false
    inlineHelpText = "Indicates the product on this line item is bundled (included) by another product in this quote. Bundled lines items have a zero price and do not allow price or quantity to be edited."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates the product on this line item is bundled (included) by another product in this quote. Bundled lines items are zero price and do not allow price or quantity to be edited."
  }
  salesforce.Picklist SBQQ__ChargeType__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ChargeType__c"
    label = "Charge Type"
    _required = false
    restricted = true
    inlineHelpText = "The type of the product charge.  This is a system field that is derived from the associated product."
    createable = true
    updateable = true
    queryable = true
    description = "The type of the product charge.  This is a system field that is derived from the associated product."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__ChargeType
  }
  salesforce.Checkbox SBQQ__ComponentDiscountedByPackage__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ComponentDiscountedByPackage__c"
    label = "Component Discounted By Package"
    defaultValue = false
    inlineHelpText = "Fixes additional discount for this component to the parent package discount."
    createable = true
    updateable = true
    queryable = true
    description = "Fixes additional discount for this component to the parent package discount."
  }
  salesforce.Picklist SBQQ__ComponentSubscriptionScope__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ComponentSubscriptionScope__c"
    label = "Component Percent of Total Scope"
    _required = false
    valueSet = [
      {
        fullName = "Package"
        default = false
        label = "Package"
      },
      {
        fullName = "Components"
        default = false
        label = "Components"
      },
      {
        fullName = "Both"
        default = false
        label = "Package & Components"
      },
      {
        fullName = "Entire Hierarchy"
        default = false
        label = "Entire Hierarchy"
      },
    ]
    restricted = false
    inlineHelpText = "Percent of Total scope set at the component level. This field overrides the Percent of Total scope copied from the Product Option."
    createable = true
    updateable = true
    queryable = true
    description = "Subscription scope set at the component level. This field overrides the subscriptions cope copied from the product."
    sorted = false
  }
  salesforce.FormulaText SBQQ__ContractNumber__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ContractNumber__c"
    label = "Contract #"
    _required = false
    formula = "SBQQ__Contract__r.ContractNumber"
    inlineHelpText = "Number of associated contract."
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    description = "Number of associated contract."
    externalId = false
  }
  salesforce.Lookup SBQQ__Contract__c {
    apiName = "SBQQ__Subscription__c.SBQQ__Contract__c"
    label = "Contract"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.Contract,
    ]
    inlineHelpText = "Contract that governs this subscription."
    createable = true
    updateable = true
    relationshipName = "Subscriptions"
    queryable = true
    description = "Contract that governs this subscription."
  }
  salesforce.FormulaText SBQQ__CreditProductId__c {
    apiName = "SBQQ__Subscription__c.SBQQ__CreditProductId__c"
    label = "Credit Product Id"
    _required = false
    formula = "SBQQ__Product__r.SBQQ__UpgradeCredit__c"
    inlineHelpText = "ID of upgrade credit product for this subscription."
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    description = "ID of upgrade credit product for this subscription."
    externalId = false
  }
  salesforce.Currency SBQQ__CustomerPrice__c {
    apiName = "SBQQ__Subscription__c.SBQQ__CustomerPrice__c"
    label = "Customer Price"
    _required = false
    inlineHelpText = "Price paid for this subscription."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Price the end user paid for this subscription."
  }
  salesforce.FormulaText SBQQ__DimensionType__c {
    apiName = "SBQQ__Subscription__c.SBQQ__DimensionType__c"
    label = "Dimension Type"
    _required = false
    formula = "TEXT(SBQQ__Dimension__r.SBQQ__Type__c)"
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    externalId = false
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Lookup SBQQ__Dimension__c {
    apiName = "SBQQ__Subscription__c.SBQQ__Dimension__c"
    label = "Price Dimension"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__Dimension__c,
    ]
    inlineHelpText = "Price Dimension associated with this Subscription"
    createable = true
    updateable = true
    relationshipName = "Subscriptions"
    queryable = true
    description = "Price Dimension associated with this Subscription"
  }
  salesforce.Picklist SBQQ__DiscountScheduleType__c {
    apiName = "SBQQ__Subscription__c.SBQQ__DiscountScheduleType__c"
    label = "Discount Schedule Type"
    _required = false
    valueSet = [
      {
        fullName = "Range"
        default = false
        label = "Range"
      },
      {
        fullName = "Slab"
        default = false
        label = "Slab"
      },
    ]
    restricted = false
    inlineHelpText = "Discount schedule type. Copied from Type field in associated discount schedule."
    createable = true
    updateable = true
    queryable = true
    description = "Discount schedule type. Must be a stored value because it's used in formula fields that are rolled up."
    sorted = false
  }
  salesforce.Lookup SBQQ__DiscountSchedule__c {
    apiName = "SBQQ__Subscription__c.SBQQ__DiscountSchedule__c"
    label = "Discount Schedule"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__DiscountSchedule__c,
    ]
    inlineHelpText = "Specify discounts in terms of % or Amt to be discounted off the product's price using quantity purchased or term. Set quantity/term ranges in tiers of different discount %. Discount is applied to List Price & resulting total is stored in the Regular Price"
    createable = true
    updateable = true
    relationshipName = "Subscriptions"
    queryable = true
    description = "Specify discounts in terms of % or Amt to be discounted off the product's price using quantity purchased or term. Set quantity/term ranges in tiers of different discount %. Discount is applied to List Price & resulting total is stored in the Regular Price"
  }
  salesforce.Percent SBQQ__Discount__c {
    apiName = "SBQQ__Subscription__c.SBQQ__Discount__c"
    label = "Additional Disc. (%)"
    _required = false
    inlineHelpText = "Additional Discount for this Subscription, if expressed as a percentage"
    createable = true
    updateable = true
    scale = 2
    precision = 11
    queryable = true
    description = "Additional Discount for this Subscription, if expressed as a percentage"
  }
  salesforce.Percent SBQQ__DistributorDiscount__c {
    apiName = "SBQQ__Subscription__c.SBQQ__DistributorDiscount__c"
    label = "Distributor Discount"
    _required = false
    inlineHelpText = "Discount to be taken on top of the Partner Discount."
    createable = true
    updateable = true
    scale = 2
    precision = 5
    queryable = true
    description = "Discount to be taken on top of the Partner Discount."
  }
  salesforce.Text SBQQ__DynamicOptionId__c {
    apiName = "SBQQ__Subscription__c.SBQQ__DynamicOptionId__c"
    label = "Dynamic Option ID"
    _required = false
    inlineHelpText = "Identifies feature and dynamic option for this line."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 40
    queryable = true
    description = "Contains feature id and product id to identify the feature and optional SKU associated with this line."
    externalId = false
  }
  salesforce.FormulaDate SBQQ__EndDate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__EndDate__c"
    label = "End Date"
    _required = false
    formula = "if ( ISBLANK (SBQQ__SubscriptionEndDate__c), SBQQ__Contract__r.EndDate, SBQQ__SubscriptionEndDate__c)"
    inlineHelpText = "The last date this contract is valid."
    createable = false
    updateable = false
    queryable = true
    description = "The last date this contract is valid."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Checkbox SBQQ__HasConsumptionSchedule__c {
    apiName = "SBQQ__Subscription__c.SBQQ__HasConsumptionSchedule__c"
    label = "Has Consumption Schedules"
    defaultValue = false
    inlineHelpText = "Indicates if this subscription has at least one consumption schedule"
    createable = true
    updateable = true
    queryable = true
    description = "Indicates if this subscription has at least one consumption schedule"
  }
  salesforce.Currency SBQQ__ListPrice__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ListPrice__c"
    label = "List Price"
    _required = false
    inlineHelpText = "List price for this subscription product."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "List price for this subscription product."
  }
  salesforce.Currency SBQQ__MarkupAmount__c {
    apiName = "SBQQ__Subscription__c.SBQQ__MarkupAmount__c"
    label = "Markup (Amt)"
    _required = false
    inlineHelpText = "Markup for this Subscription, if expressed as an amount"
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Markup for this Subscription, if expressed as an amount"
  }
  salesforce.Percent SBQQ__MarkupRate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__MarkupRate__c"
    label = "Markup (%)"
    _required = false
    inlineHelpText = "Markup for this Subscription, if expressed as a percentage"
    createable = true
    updateable = true
    scale = 2
    precision = 8
    queryable = true
    description = "Markup for this Subscription, if expressed as a percentage"
  }
  salesforce.Currency SBQQ__NetPrice__c {
    apiName = "SBQQ__Subscription__c.SBQQ__NetPrice__c"
    label = "Net Price"
    _required = false
    inlineHelpText = "Net price for this subscription."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Net price for this subscription."
  }
  salesforce.Number SBQQ__Number__c {
    apiName = "SBQQ__Subscription__c.SBQQ__Number__c"
    label = "Number"
    _required = false
    precision = 5
    scale = 0
    inlineHelpText = "Number indicating this line's position within its group or quote."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Number indicating this line's position within its group or quote."
    externalId = false
  }
  salesforce.Currency SBQQ__OptionDiscountAmount__c {
    apiName = "SBQQ__Subscription__c.SBQQ__OptionDiscountAmount__c"
    label = "Option Discount (Amt)"
    _required = false
    inlineHelpText = "Discount extended on this product because it's part of a package."
    createable = true
    updateable = true
    scale = 2
    precision = 12
    queryable = true
    description = "Discount extended on this product because it's part of a package."
  }
  salesforce.Percent SBQQ__OptionDiscount__c {
    apiName = "SBQQ__Subscription__c.SBQQ__OptionDiscount__c"
    label = "Option Discount (%)"
    _required = false
    inlineHelpText = "If this line is for an optional SKU, this field captures any discount given to the package and extended to the option."
    createable = true
    updateable = true
    scale = 2
    precision = 5
    queryable = true
    description = "If this line is for an optional SKU, this field captures any discount given to the package and extended to the option."
  }
  salesforce.Number SBQQ__OptionLevel__c {
    apiName = "SBQQ__Subscription__c.SBQQ__OptionLevel__c"
    label = "Option Level"
    _required = false
    precision = 5
    scale = 0
    inlineHelpText = "Indicates nest level of this option (only applies to lines that are generated from options)."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Indicates nest level of this option (only applies to lines that are generated from options)."
    externalId = false
  }
  salesforce.Picklist SBQQ__OptionType__c {
    apiName = "SBQQ__Subscription__c.SBQQ__OptionType__c"
    label = "Option Type"
    _required = false
    valueSet = [
      {
        fullName = "Component"
        default = false
        label = "Component"
      },
      {
        fullName = "Accessory"
        default = false
        label = "Accessory"
      },
      {
        fullName = "Related Product"
        default = false
        label = "Related Product"
      },
    ]
    restricted = false
    inlineHelpText = "Indicates the Option Type, which is copied from related Product Option. Determines how quantity is calculated."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates the Option Type, which is copied from related Product Option. Determines how quantity is calculated."
    sorted = false
  }
  salesforce.Lookup SBQQ__OrderProduct__c {
    apiName = "SBQQ__Subscription__c.SBQQ__OrderProduct__c"
    label = "Order Product"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.OrderItem,
    ]
    inlineHelpText = "The order product where this subscription is generated from."
    createable = true
    updateable = true
    relationshipName = "Subscriptions"
    queryable = true
    description = "The order product where this subscription is originated from."
  }
  salesforce.Lookup SBQQ__OriginalQuoteLine__c {
    apiName = "SBQQ__Subscription__c.SBQQ__OriginalQuoteLine__c"
    label = "Original Quote Line"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__QuoteLine__c,
    ]
    inlineHelpText = "Original Quote Line of the subscription."
    createable = true
    updateable = true
    relationshipName = "OriginalQuoteLine"
    queryable = true
    description = "Exists for convenience of not having to run relationship queries."
  }
  salesforce.Currency SBQQ__OriginalUnitCost__c {
    apiName = "SBQQ__Subscription__c.SBQQ__OriginalUnitCost__c"
    label = "Original Unit Cost"
    _required = false
    inlineHelpText = "Original unit cost of the subscription at the time of purchase before Cost Schedules were applied."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Original unit cost of the subscription at the time of purchase before Cost Schedules were applied."
  }
  salesforce.Text SBQQ__PackageProductCode__c {
    apiName = "SBQQ__Subscription__c.SBQQ__PackageProductCode__c"
    label = "Package Product Code"
    _required = false
    inlineHelpText = "A code listing each of this package's components based on their component codes."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 255
    queryable = true
    description = "Product code for the package generated by appending codes of selected components according to specified pattern."
    externalId = false
  }
  salesforce.Html SBQQ__PackageProductDescription__c {
    apiName = "SBQQ__Subscription__c.SBQQ__PackageProductDescription__c"
    label = "Package Product Description"
    _required = false
    inlineHelpText = "A description of each component in this package."
    createable = true
    updateable = true
    length = 32000
    queryable = true
    description = "Product Description for the package generated by appending descriptions of selected components according to specified pattern."
    visibleLines = 25
  }
  salesforce.Percent SBQQ__PartnerDiscount__c {
    apiName = "SBQQ__Subscription__c.SBQQ__PartnerDiscount__c"
    label = "Partner Discount"
    _required = false
    inlineHelpText = "Partner discounts are applied after all automatic and discretionary discounts. The partner discount is taken into account in the Partner Price."
    createable = true
    updateable = true
    scale = 2
    precision = 5
    queryable = true
    description = "Partner discounts are applied after all automatic and discretionary discounts. The partner discount is taken into account in the Partner Price."
  }
  salesforce.Picklist SBQQ__PricingMethod__c {
    apiName = "SBQQ__Subscription__c.SBQQ__PricingMethod__c"
    label = "Pricing Method"
    _required = false
    valueSet = [
      {
        fullName = "List"
        default = true
        label = "List"
      },
      {
        fullName = "Cost"
        default = false
        label = "Cost"
      },
      {
        fullName = "Block"
        default = false
        label = "Block"
      },
      {
        fullName = "Percent Of Total"
        default = false
        label = "Percent Of Total"
      },
      {
        fullName = "Custom"
        default = false
        label = "Custom"
      },
    ]
    restricted = false
    inlineHelpText = "Indicates how the price for this line item is calculated. \"List\" = subtracting discount from list price. \"Cost\" = adding markup to cost."
    createable = true
    updateable = true
    queryable = true
    description = "Determines how the price for this line item is set. \"List\" = calculated by subtracting discount from list price. \"Cost\"  = calculated by adding markup to cost."
    sorted = false
  }
  salesforce.FormulaText SBQQ__ProductId__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ProductId__c"
    label = "Product Id"
    _required = false
    formula = "SBQQ__Product__c"
    inlineHelpText = "Convenience field to support integration with Service Cloud."
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    description = "Convenience field to support integration with Service Cloud."
    externalId = false
  }
  salesforce.FormulaText SBQQ__ProductName__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ProductName__c"
    label = "Product Name"
    _required = false
    formula = "SBQQ__Product__r.Name"
    inlineHelpText = "Pulls in the Product Name"
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    description = "Pulls in the Product Name"
    externalId = false
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Lookup SBQQ__ProductOption__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ProductOption__c"
    label = "Product Option"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__ProductOption__c,
    ]
    inlineHelpText = "Product option that generated this line (if any)."
    createable = true
    updateable = true
    relationshipName = "Subscriptions"
    queryable = true
    description = "Product option that generated this line (if any)."
  }
  salesforce.Picklist SBQQ__ProductSubscriptionType__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ProductSubscriptionType__c"
    label = "Product Subscription Type"
    _required = false
    restricted = true
    inlineHelpText = "Set the subscription's product subscription type."
    createable = true
    updateable = true
    queryable = true
    description = "Set the subscription's product subscription type."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__SubscriptionType
  }
  salesforce.Lookup SBQQ__Product__c {
    apiName = "SBQQ__Subscription__c.SBQQ__Product__c"
    label = "Product"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.Product2,
    ]
    inlineHelpText = "Product used to sell this subscription."
    createable = true
    updateable = true
    relationshipName = "Subscriptions"
    queryable = true
    description = "Product used to sell this subscription."
  }
  salesforce.Number SBQQ__ProrateMultiplier__c {
    apiName = "SBQQ__Subscription__c.SBQQ__ProrateMultiplier__c"
    label = "Prorate Multiplier"
    _required = false
    precision = 8
    scale = 4
    inlineHelpText = "Calculated ratio used to compute prorated price."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Calculated ratio used to compute prorated price."
    externalId = false
  }
  salesforce.Number SBQQ__Quantity__c {
    apiName = "SBQQ__Subscription__c.SBQQ__Quantity__c"
    label = "Quantity"
    _required = true
    precision = 12
    scale = 2
    inlineHelpText = "Quantity of this subscription product purchased by the customer."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Quantity of this subscription product purchased by the customer."
    externalId = false
  }
  salesforce.Lookup SBQQ__QuoteLine__c {
    apiName = "SBQQ__Subscription__c.SBQQ__QuoteLine__c"
    label = "Quote Line"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__QuoteLine__c,
    ]
    inlineHelpText = "Quote line that generated this subscription."
    createable = true
    updateable = true
    relationshipName = "Subscriptions"
    queryable = true
    description = "Quote line that generated this subscription."
  }
  salesforce.Currency SBQQ__RegularPrice__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RegularPrice__c"
    label = "Regular Price"
    _required = false
    inlineHelpText = "Regular Price for this Subscription."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Regular Price for this Subscription."
  }
  salesforce.Currency SBQQ__RenewalPrice__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RenewalPrice__c"
    label = "Renewal Price"
    _required = false
    inlineHelpText = "Override the default calculated price of this subscription on a renewal quote. If your account's renewal pricing method is Uplift, the uplift applies to this renewal price."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Define the price of quote lines that appear on the renewal quote when you renew this subscription. This field overrides the result of price calculations from your account’s renewal pricing method. If renewal pricing method is Uplift, uplift will be applied to the Renewal Price."
  }
  salesforce.FormulaText SBQQ__RenewalProductId__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RenewalProductId__c"
    label = "Renewal Product Id"
    _required = false
    formula = "IF(ISBLANK(SBQQ__Product__r.SBQQ__RenewalProduct__c),SBQQ__Product__c,IF(ISPICKVAL(SBQQ__Product__r.SBQQ__RenewalProduct__r.SBQQ__SubscriptionPricing__c, ''), SBQQ__Product__c, SBQQ__Product__r.SBQQ__RenewalProduct__c))"
    inlineHelpText = "Product ID for the renewal subscription."
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    description = "Exists for convenience of not having to run relationship queries."
    externalId = false
  }
  salesforce.FormulaText SBQQ__RenewalProductOptionId__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RenewalProductOptionId__c"
    label = "Renewal Product Option ID"
    _required = false
    formula = "SBQQ__ProductOption__r.SBQQ__RenewalProductOption__c"
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    externalId = false
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.FormulaText SBQQ__RenewalProductOptionProductId__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RenewalProductOptionProductId__c"
    label = "Renewal Product Option Product ID"
    _required = false
    formula = "SBQQ__ProductOption__r.SBQQ__RenewalProductOption__r.SBQQ__OptionalSKU__c"
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    externalId = false
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.FormulaText SBQQ__RenewalProductOptionSubscriptionPricing__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RenewalProductOptionSubscriptionPricing__c"
    label = "Renewal Product Option Sub Pricing"
    _required = false
    formula = "TEXT(SBQQ__ProductOption__r.SBQQ__RenewalProductOption__r.SBQQ__OptionalSKU__r.SBQQ__SubscriptionPricing__c)"
    createable = false
    updateable = false
    unique = false
    caseSensitive = false
    length = 1300
    queryable = true
    externalId = false
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Number SBQQ__RenewalQuantity__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RenewalQuantity__c"
    label = "Renewal Quantity"
    _required = false
    precision = 12
    scale = 2
    inlineHelpText = "Quantity of this subscription product that will be renewed."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "Quantity of this subscription product that will be renewed."
    externalId = false
  }
  salesforce.Percent SBQQ__RenewalUpliftRate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RenewalUpliftRate__c"
    label = "Renewal Uplift (%)"
    _required = false
    inlineHelpText = "Rate of renewal price increases."
    createable = true
    updateable = true
    scale = 3
    precision = 11
    queryable = true
    description = "Rate of renewal price increases."
  }
  salesforce.Date SBQQ__RenewedDate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RenewedDate__c"
    label = "Renewed Date"
    _required = false
    inlineHelpText = "Date this subscription was renewed. Blank means it has not been renewed."
    createable = true
    updateable = true
    queryable = true
    description = "Date this subscription was renewed as determined by date the renewal opportunity was contracted."
  }
  salesforce.Text SBQQ__RequiredById__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RequiredById__c"
    label = "Required By Id"
    _required = false
    inlineHelpText = "What Id the field is required by."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 18
    queryable = true
    description = "What Id the field is required by."
    externalId = false
  }
  salesforce.Lookup SBQQ__RequiredByProduct__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RequiredByProduct__c"
    label = "Parent Product"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.Product2,
    ]
    inlineHelpText = "Parent Product of this subscription."
    createable = true
    updateable = true
    relationshipName = "ChildSubscriptions"
    queryable = true
    description = "Parent Product of this subscription."
  }
  salesforce.Lookup SBQQ__RevisedSubscription__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RevisedSubscription__c"
    label = "Revised Subscription"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__Subscription__c,
    ]
    inlineHelpText = "Lookup the Revised Subscription for this field."
    createable = true
    updateable = true
    relationshipName = "Revisions"
    queryable = true
  }
  salesforce.Text SBQQ__RootId__c {
    apiName = "SBQQ__Subscription__c.SBQQ__RootId__c"
    label = "Root Id"
    _required = false
    inlineHelpText = "The ID of the subscription or asset at the root of the bundle that contains this subscription"
    createable = true
    updateable = true
    unique = false
    externalId = true
    caseSensitive = false
    length = 18
    queryable = true
    description = "The ID of the subscription or asset at the root of the bundle that contains this subscription"
  }
  salesforce.Date SBQQ__SegmentEndDate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SegmentEndDate__c"
    label = "Segment End Date"
    _required = false
    inlineHelpText = "For MDQ products, the End Date from the original segment's Quote Line."
    createable = true
    updateable = true
    queryable = true
    description = "For MDQ products, the End Date from the original segment's Quote Line."
  }
  salesforce.Number SBQQ__SegmentIndex__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SegmentIndex__c"
    label = "Segment Index"
    _required = false
    precision = 2
    scale = 0
    inlineHelpText = "For multi-segmented Products, Index representing this Quote Line's position in the segment table."
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "For multi-segmented Products, Index representing this Quote Line's position in the segment table."
    externalId = false
  }
  salesforce.Text SBQQ__SegmentKey__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SegmentKey__c"
    label = "Segment Key"
    _required = false
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 30
    queryable = true
    externalId = false
  }
  salesforce.Text SBQQ__SegmentLabel__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SegmentLabel__c"
    label = "Segment Label"
    _required = false
    inlineHelpText = "For multi-segmented Products, this is the Column header label (e.g. \"Year 1\") associated with this line."
    createable = true
    updateable = true
    unique = false
    caseSensitive = false
    length = 25
    queryable = true
    description = "For multi-segmented Products, this is the Column header label (e.g. \"Year 1\") associated with this line."
    externalId = false
  }
  salesforce.Number SBQQ__SegmentQuantity__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SegmentQuantity__c"
    label = "Segment Quantity"
    _required = false
    precision = 12
    scale = 2
    inlineHelpText = "For MDQ Products, the quantity corresponding to the segment's original Quote Line"
    createable = true
    updateable = true
    unique = false
    queryable = true
    description = "For MDQ Products, the quantity corresponding to the segment's original Quote Line"
    externalId = false
  }
  salesforce.Date SBQQ__SegmentStartDate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SegmentStartDate__c"
    label = "Segment Start Date"
    _required = false
    inlineHelpText = "For MDQ products, the Start Date from the original segment's Quote Line."
    createable = true
    updateable = true
    queryable = true
    description = "For MDQ products, the Start Date from the original segment's Quote Line."
  }
  salesforce.Currency SBQQ__SegmentUpliftAmount__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SegmentUpliftAmount__c"
    label = "Segment Uplift (Amt)"
    _required = false
    inlineHelpText = "For MDQ products, the Uplift Amount from the original segment's Quote Line."
    createable = true
    updateable = true
    scale = 2
    precision = 12
    queryable = true
    description = "For MDQ products, the Uplift Amount from the original segment's Quote Line."
  }
  salesforce.Percent SBQQ__SegmentUplift__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SegmentUplift__c"
    label = "Segment Uplift"
    _required = false
    inlineHelpText = "For MDQ products, the Uplift from the original segment's Quote Line."
    createable = true
    updateable = true
    scale = 2
    precision = 9
    queryable = true
    description = "For MDQ products, the Uplift from the original segment's Quote Line."
  }
  salesforce.Currency SBQQ__SpecialPrice__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SpecialPrice__c"
    label = "Special Price"
    _required = false
    inlineHelpText = "Special Price for this Subscription."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Special Price for this Subscription."
  }
  salesforce.FormulaDate SBQQ__StartDate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__StartDate__c"
    label = "Start Date"
    _required = false
    formula = "if ( ISBLANK (SBQQ__SubscriptionStartDate__c), SBQQ__Contract__r.StartDate, SBQQ__SubscriptionStartDate__c)"
    inlineHelpText = "The first date this subscription is in effect."
    createable = false
    updateable = false
    queryable = true
    description = "The first date this subscription is in effect."
    formulaTreatBlanksAs = "BlankAsZero"
  }
  salesforce.Date SBQQ__SubscriptionEndDate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SubscriptionEndDate__c"
    label = "Subscription End Date"
    _required = false
    inlineHelpText = "Matches the quote line end date by default. If blank, it will match the contract end date."
    createable = true
    updateable = true
    queryable = true
    description = "Matches the quote line end date by default. If blank, it will match the contract end date."
  }
  salesforce.Date SBQQ__SubscriptionStartDate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SubscriptionStartDate__c"
    label = "Subscription Start Date"
    _required = false
    inlineHelpText = "Matches the quote line start date by default. If blank, it will match the contract start date."
    createable = true
    updateable = true
    queryable = true
    description = "Matches the quote line start date by default. If blank, it will match the contract start date."
  }
  salesforce.Picklist SBQQ__SubscriptionType__c {
    apiName = "SBQQ__Subscription__c.SBQQ__SubscriptionType__c"
    label = "Subscription Type"
    _required = false
    restricted = true
    fieldDependency = {
      controllingField = "SBQQ__ProductSubscriptionType__c"
      valueSettings = [
        {
          valueName = "Renewable"
          controllingFieldValue = [
            "Renewable",
            "Renewable/Evergreen",
          ]
        },
        {
          valueName = "One-time"
          controllingFieldValue = [
            "One-time",
          ]
        },
        {
          valueName = "Evergreen"
          controllingFieldValue = [
            "Renewable/Evergreen",
            "Evergreen",
          ]
        },
      ]
    }
    inlineHelpText = "Indicates the subscription type to determine contract's pricing."
    createable = true
    updateable = true
    queryable = true
    description = "Indicates the subscription type to determine contract's pricing."
    valueSetName = salesforce.GlobalValueSet.instance.SBQQ__SubscriptionType
  }
  salesforce.Lookup SBQQ__TermDiscountSchedule__c {
    apiName = "SBQQ__Subscription__c.SBQQ__TermDiscountSchedule__c"
    label = "Term Discount Schedule"
    _required = false
    allowLookupRecordDeletion = true
    referenceTo = [
      salesforce.SBQQ__DiscountSchedule__c,
    ]
    inlineHelpText = "Schedule for discounts based on subscription term. Setting this to \"Group\" applies the discount rate for the group term, while setting it to \"Quote\" applies the discount rate for the entire quote term, regardless of the different terms in your groups."
    createable = true
    updateable = true
    relationshipName = "TermDiscountedSubscriptions"
    queryable = true
    description = "Schedule for discounts based on subscription term. This is useful when you want to show a breakdown of payments in separate groups, for different terms, yet you want to discount reflected for the entire duration of the subscription. Leave Term Discount Level blank if you want discount schedules applied based on the term of each line item."
  }
  salesforce.Date SBQQ__TerminatedDate__c {
    apiName = "SBQQ__Subscription__c.SBQQ__TerminatedDate__c"
    label = "Terminated Date"
    _required = false
    inlineHelpText = "Date the subscription terminated. Automatically populated when covered asset is upgraded."
    createable = true
    updateable = true
    queryable = true
    description = "Date on which this subscription terminated."
  }
  salesforce.Currency SBQQ__UnitCost__c {
    apiName = "SBQQ__Subscription__c.SBQQ__UnitCost__c"
    label = "Unit Cost"
    _required = false
    inlineHelpText = "Unit Cost for this Subscription."
    createable = true
    updateable = true
    scale = 2
    precision = 14
    queryable = true
    description = "Unit Cost for this Subscription."
  }
}
